<?php  
/** 
 * Created on 2008-12-25 
 * 
 * Written by shankka 
 * in memory of my puppy love 
 */  
  
/** 
 * ccMail 
 *  
 * 使用php的mail()发送邮件 
 * 需要注意的几点是： 
 * 1.邮件的header需要使用者根据自己需要自己设置 Content-Type在发送带附件的邮件时需要设置为 multipart/mixed 
 * 2.$CRLF成员变量默认为\r\n,我在示例中将其置为\n，因为在我所使用的freebsd系统中的mail会将\n转成\r\n，使用者酌情使用 
 * 3.addAttachment方法的$pathToAttachment参数为附件的真实可以访问路径，假如打开失败会添加失败 
 */  


/**
$ccMail = new ccMail('test@sina.com.cn', '测试邮件');  
$ccMail->setCRLF("\n");      //我使用的就是手册里mail函数所写的那种poor quality Unix mail transfer agents:)   
  
$headersArray = array(  
    'From'=>'test@sina.com.cn',  
    'To'=>'test@sina.com.cn',  
    'Subject'=>'测试邮件',  
    'Content-type'=>'multipart/mixed'  
  );  
$ccMail->setHeaders($headersArray);  
  
$body = '这是一个测试的邮件，hello ccMail！';  
$ccMail->setBody($body, 'gb2312');  
  
$ccMail->addAttachment('test.jpg', 'http://farm4.static.flickr.com/3167/3092868058_f10391ac37.jpg');  
$ccMail->mail();  
?>  
 *
 */
class WeFlex_Mail  
{  
  var $headers = array(  
          //这些header是从wiki中查到，具体能用到的不多，其中X-Face就不知道是干啥的  
          'From'=>'',        //The e-mail address, and optionally the name of the sender   
          'To'=>'',        //The e-mail address[es], and optionally name[s] of the message‘s recipient[s]   
          'Subject'=>'',      //A brief summary of the contents of the message   
          'Date'=>'',        //The local time and date when the message was written   
          'Cc'=>'',        //Carbon copy   
          'BCC'=>'',        //Blind Carbon Copy   
          'Received'=>'',      //Tracking information generated by mail servers that have previously handled a message  
          'Content-Type'=>'',    //Information about how the message has to be displayed, usually a MIME type   
          'Reply-To'=>'',      //Address that should be used to reply to the sender  
          'References'=>'',    //Message-ID of the message that this is a reply to, and the message-id of this message, etc.  
          'In-Reply-To'=>'',    //Message-ID of the message that this is a reply to.   
          'X-Face'=>'',      //Small icon   
          );  
  var $body = '';  
  var $charset = '';  
  var $to = '';  
  var $subject = '';  
  var $attachment = array();  
  var $CRLF = "\r\n";            //default CRLF is \r\n,but Some poor quality Unix mail transfer agents replace LF by CRLF automatically,so you can change it with setCRLF() method,  
    
  /** 
   * constructer of ccMail 
   *  
   * @param  $to 
   * @param  $subject 
   * @return ccMail 
   */  
  function __construct($to='', $subject='', $charset='')  
  {  
    if($to != '')  
      $this->to = $to;  
      
    if($subject != '')  
      $this->subject = $subject;  
        
    if($charset != '')  
      $this->charset = $charset;  
  }  
    
  /** 
   * set value of headers 
   * 设置header的值 
   * 
   * @param array $headerValueArray 
   * @return boolean 
   */  
  function setHeaders($headerValueArray=array())  
  {  
    if(gettype($headerValueArray) != 'array')  
      return false;  
      
    foreach($headerValueArray as $header=>$value)  
      $this->headers[$header] = $value;  
      
    return true;  
  }  
    
  /** 
   * set value of mail body 
   * 
   * @param string $body 
   * @param  $charset 
   * @param  $contentType    MIME type 
   * @param  $transferEncoding 
   */  
  function setBody($body, $charset='iso-8859-1', $contentType='text/plain', $transferEncoding='8bit')  
  {  
    $this->body ="Content-type: {$contentType}; charset={$charset}\nContent-transfer-encoding: {$transferEncoding}\n\n{$body}";  
    $this->body = trim($this->body);  
  }  
    
  /** 
   * add a attachment to mail body 
   * 
   * @param  $name 
   * @param  $pathToAttachment 
   * @param  $mimeType 
   * @return boolean 
   */  
  function addAttachment($name, $pathToAttachment, $mimeType='application/unknown')  
  {  
    $file_content = file_get_contents($pathToAttachment);  
      
    if($file_content === false)  
      return false;  
      
    $attachment = base64_encode($file_content);  
    $attachment = chunk_split($attachment);  
      
    $attachmentContent = "Content-type: {$mimeType}; name={$name}\nContent-disposition: attachment; filename={$name}\nContent-transfer-encoding: base64\n\n{$attachment}";  
      
    $this->attachment[] = trim($attachmentContent);  
    return true;  
  }  
    
  /** 
   * send the mail 
   * 
   * @return boolean 
   */  
  function mail()  
  {  
    $boundary = uniqid('');  
      
    $attachmentAllContent = '';  
    $attachmentArray = $this->attachment;  
    $body = $this->body;  
    $body = trim($body);  
      
    foreach($attachmentArray as $attachment)  
    {  
      $attachTmp = "--{$boundary}\n{$attachment}";  
      $attachmentAllContent .= "\n".trim($attachTmp);  
    }  
      
    $mailBody = "--{$boundary}\n{$body}\n{$attachmentAllContent}\n--{$boundary}--";  
      
    $headerContent = '';  
    $headers = $this->headers;  
      
    foreach($headers as $header=>$value)  
    {  
      if($value != '')  
      {  
        if($header == 'Content-type')  
          $headerContent .= "{$header}: {$value}; charset={$this->charset}; boundary={$boundary}{$this->CRLF}";  
        else  
          $headerContent .= "{$header}: {$value}{$this->CRLF}";  
      }  
    }  
      
    //echo $mailBody."\n";  
    //echo $headerContent;  
      
    return mail($this->to, $this->subject, $mailBody, $headerContent);  
  }  
    
  /** 
   * set value of $to 
   * 
   * @param string $to 
   */  
  function setTo($to='')  
  {  
    if($to != '')  
      $this->to = $to;  
  }  
    
  /** 
   * set value of subject 
   * 
   * @param string $subject 
   */  
  function setSubject($subject='')  
  {  
    if($subject != '')  
      $this->subject = $subject;  
  }  
    
  /** 
   * set value of CRLF 
   * 
   * @param  $crlf 
   */  
  function setCRLF($crlf='')  
  {  
    if($crlf != '')  
      $this->CRLF = $crlf;  
  }  
    
  /** 
   * set value of charset 
   * 
   * @param  $charset 
   */  
  function setCharset($charset='')  
  {  
    if($charset != '')  
      $this->charset = $charset;  
  }  
} 